
-- ACTUALIZA CONTACTOS
create or replace PROCEDURE UPDATE_D_CONTACTS AS
BEGIN
  insert into D_CONTACTS
  select SEQ_D_CONTACTS.nextval, C.CONTACT_ID,FIRST_NAME,LAST_NAME,PHONE,EMAIL,R.REGION_NAME
  from a01703613.CONTACTS C, a01703613.CUSTOMERS CU, a01703613.REGIONS R
  where C.CONTACT_ID = CU.CONTACT_ID
  AND C.CONTACT_ID not in (select C.CONTACT_ID from C.CONTACT_ID)
  AND CU.REGION_ID = R.REGION_ID;
commit;
END UPDATE_D_CONTACTS;

-- ACTUALIZA EMPLEADOS
create or replace PROCEDURE UPDATE_D_EMPLOYEES AS
BEGIN
  insert into D_EMPLOYEES
  select SEQ_D_EMPLOYEES.nextval, C.CONTACT_ID,FIRST_NAME,LAST_NAME,PHONE,EMAIL,R.REGION_NAME
  from a01703613.EMPLOYEES E, a01703613.REGIONS R
  where E.REGION_ID = R.REGION_ID
  AND E.EMPLOYEE_ID not in (select E.EMPLOYEE_ID from E.CONTACT_ID);
commit;
END UPDATE_D_EMPLOYEES;

-- ACTUALIZA CLIENTES
create or replace PROCEDURE UPDATE_D_CUSTOMERS AS
BEGIN
  insert into D_CUSTOMERS
  select SEQ_D_CUSTOMERS.nextval, C.CONTACT_ID, FIRST_NAME,LAST_NAME,PHONE,EMAIL,R.REGION_NAME
  from a01703613.CUSTOMERS CU, a01703613.REGIONS R
  where CU.REGION_ID = R.REGION_ID
  AND CU.EMPLOYEE_ID not in (select CU.EMPLOYEE_ID from CU.CONTACT_ID);
commit;
END UPDATE_D_CUSTOMERS;

-- HECHOS CONTACTOS
create or replace PROCEDURE UPDATE_H_CONTACTS
(
  INITIAL_DATE IN DATE,
  FINAL_DATE IN DATE
)
AS
vINITIAL_DATE date;
vFINAL_DATE date;
vPKD_CONTACT number;
vPKDTIME number;
vTOTAL_SALE number;


cursor CURSOR_TIME is
select PKDTIME
from dwa01703613.D_TIME
where `DATE` BETWEEN vINITIAL_DATE and vFINAL_DATE;

cursor CURSOR_CONTACTS is
select DCO.PKDCONTACT, DTI.PKDTIME, SUM(OI.quantity * OI.unit_price)
from
a01703613.ORDERS O,
a01703613.ORDERS_ITEMS OI,
a01703613.CUSTOMERS CU,
dwa01703613.D_CONTACTS DCO,
dwa01703613.D_TIME DTI
where DCO.PKDCONTACT = CU.CONTACT_ID
and CU.CUSTOMER_ID = O.CUSTOMER_ID
and O.ORDER_ID = OI.ORDER_ID
and TRUNC (O.DATEHOUR) = DTI.DATE
group by DCO.PKDCONTACT, DTI.PKDTIME;

BEGIN

  vINITIAL_DATE := INITIAL_DATE;
  vFINAL_DATE := FINAL_DATE;

  open CURSOR_TIME;
  LOOP
    fetch CURSOR_TIME into vPKDTIME;
    exit when CURSOR_TIME%NOTFOUND;
    delete from dwa01703613.H_CONTACTS where PKDTIME=vPKDTIME;
    commit;
  END LOOP;
  close CURSOR_TIME;

  open CURSOR_CONTACTS;
  LOOP
    fetch CURSOR_CONTACTS into vPKD_CONTACT, vPKDTIME, vTOTAL_SALE;
    exit when CURSOR_CONTACTS%NOTFOUND;
    insert into dwa01703613.H_CONTACTS (PKD_H_CONTACTS,PKD_CONTACT,PKDTIME,TOTAL_SALE)
    values (dwa01703613.seq_H_CONTACTS.nextval,vPKD_CONTACT,vPKDTIME,vTOTAL_SALE);
    commit;
  END LOOP;
  close CURSOR_CONTACTS;

END UPDATE_H_CONTACTS;



-- HECHOS VENTAS EMPLEADOS
create or replace PROCEDURE UPDATE_H_SALES_EMPLOYEES
(
  INITIAL_DATE IN DATE,
  FINAL_DATE IN DATE
)
AS
vINITIAL_DATE date;
vFINAL_DATE date;
vPKD_EMPLOYEE number;
vPKDTIME number;
vSALES_UNITS number;
vTOTAL_SALE number;


cursor CURSOR_TIME is
select PKDTIME
from dwa01703613.D_TIME
where `DATE` BETWEEN vINITIAL_DATE and vFINAL_DATE;

cursor CURSOR_SALES_EMPLOYEES is
select EMP.PKD_EMPLOYEE, DTI.PKDTIME,SUM(OI.quantity), SUM(OI.quantity * OI.unit_price)
from
a01703613.ORDERS O,
a01703613.ORDERS_ITEMS OI,
a01703613.CUSTOMERS CU,
dwa01703613.EMPLOYEES EMP,
dwa01703613.D_TIME DTI
where EMP.PKD_EMPLOYEE = CU.CONTACT_ID
and CU.CUSTOMER_ID = O.CUSTOMER_ID
and O.ORDER_ID = OI.ORDER_ID
and TRUNC (O.DATEHOUR) = DTI.DATE
group by EMP.PKD_EMPLOYEE, DTI.PKDTIME;

BEGIN

  vINITIAL_DATE := INITIAL_DATE;
  vFINAL_DATE := FINAL_DATE;

  open CURSOR_TIME;
  LOOP
    fetch CURSOR_TIME into vPKDTIME;
    exit when CURSOR_TIME%NOTFOUND;
    delete from dwa01703613.H_SALES_EMPLOYEES where PKDTIME=vPKDTIME;
    commit;
  END LOOP;
  close CURSOR_TIME;

  open CURSOR_SALES_EMPLOYEES;
  LOOP
    fetch CURSOR_SALES_EMPLOYEES into vPKD_EMPLOYEE, vPKDTIME, vSALES_UNITS, vTOTAL_SALE;
    exit when CURSOR_SALES_EMPLOYEES%NOTFOUND;
    insert into dwa01703613.H_SALES_EMPLOYEES (PKD_H_SALES_EMPLOYEES,PKD_EMPLOYEE,PKD_TIME,SALES_UNITS,TOTAL_SALE )
    values (dwa01703613.seq_H_SALES_EMPLOYEES.nextval,vPKD_EMPLOYEE,vPKDTIME,vSALES_UNITS,vTOTAL_SALE);
    commit;
  END LOOP;
  close CURSOR_SALES_EMPLOYEES;

END UPDATE_H_SALES_EMPLOYEES;


-- HECHOS VENTAS CLIENTES
create or replace PROCEDURE UPDATE_H_CUSTOMERS
(
  INITIAL_DATE IN DATE,
  FINAL_DATE IN DATE
)
AS
vINITIAL_DATE date;
vFINAL_DATE date;
vPKD_CUSTOMER number;
vPKDTIME number;
vSALES_UNITS number;
vTOTAL_SALE number;


cursor CURSOR_TIME is
select PKDTIME
from dwa01703613.D_TIME
where `DATE` BETWEEN vINITIAL_DATE and vFINAL_DATE;

cursor CURSOR_CUSTOMERS is
select EMP.PKD_CUSTOMER, DTI.PKDTIME,SUM(OI.quantity), SUM(OI.quantity * OI.unit_price)
from
a01703613.ORDERS O,
a01703613.ORDERS_ITEMS OI,
a01703613.CUSTOMERS CU,
dwa01703613.D_TIME DTI
where EMP.PKD_CUSTOMER = CU.CUSTOMER_ID
and CU.CUSTOMER_ID = O.CUSTOMER_ID
and O.ORDER_ID = OI.ORDER_ID
and TRUNC (O.DATEHOUR) = DTI.DATE
group by EMP.PKD_CUSTOMER, DTI.PKDTIME;

BEGIN

  vINITIAL_DATE := INITIAL_DATE;
  vFINAL_DATE := FINAL_DATE;

  open CURSOR_TIME;
  LOOP
    fetch CURSOR_TIME into vPKDTIME;
    exit when CURSOR_TIME%NOTFOUND;
    delete from dwa01703613.H_CUSTOMERS where PKDTIME=vPKDTIME;
    commit;
  END LOOP;
  close CURSOR_TIME;

  open CURSOR_CUSTOMERS;
  LOOP
    fetch CURSOR_CUSTOMERS into vPKD_CUSTOMER,vPKDTIME,vSALES_UNITS,vTOTAL_SALE;
    exit when CURSOR_CUSTOMERS%NOTFOUND;
    insert into dwa01703613.H_CUSTOMERS (PKD_H_CUSTOMERS,PKD_CUSTOMER,SALES_UNITS,TOTAL_SALE)
    values (dwa01703613.seq_H_CUSTOMERS.nextval,vPKD_CUSTOMER,vPKDTIME,vSALES_UNITS,vTOTAL_SALE);
    commit;
  END LOOP;
  close CURSOR_CUSTOMERS;

END UPDATE_H_CUSTOMERS;

-- HECHOS TOTALES VENTAS
create or replace PROCEDURE H_TOTAL_SALES
(
  INITIAL_DATE IN DATE,
  FINAL_DATE IN DATE
)
AS
vINITIAL_DATE date;
vFINAL_DATE date;
vPKDTIME number;
vSALES_UNITS number;
vTOTAL_SALE number;
AVERAGE_SALES_DAY number;


cursor CURSOR_TIME is
select PKDTIME
from dwa01703613.D_TIME
where `DATE` BETWEEN vINITIAL_DATE and vFINAL_DATE;

cursor H_TOTAL_SALES is
select DTI.PKDTIME,SUM(OI.quantity), SUM(OI.quantity * OI.unit_price), AVG(OI.UNIT_PRICE)
from
a01703613.ORDERS O,
a01703613.ORDERS_ITEMS OI,
dwa01703613.D_TIME DTI
where O.ORDER_ID = OI.ORDER_ID
and TRUNC (O.DATEHOUR) = DTI.DATE
group by DTI.PKDTIME;

BEGIN

  vINITIAL_DATE := INITIAL_DATE;
  vFINAL_DATE := FINAL_DATE;

  open CURSOR_TIME;
  LOOP
    fetch CURSOR_TIME into vPKDTIME;
    exit when CURSOR_TIME%NOTFOUND;
    delete from dwa01703613.H_TOTAL_SALES where PKDTIME=vPKDTIME;
    commit;
  END LOOP;
  close CURSOR_TIME;

  open H_TOTAL_SALES;
  LOOP
    fetch H_TOTAL_SALES into vPKDTIME, vSALES_UNITS, vTOTAL_SALE, AVERAGE_SALES_DAY;
    exit when H_TOTAL_SALES%NOTFOUND;
    insert into dwa01703613.H_TOTAL_SALES (PKD_H_TOTAL_SALES,PKD_TIME,SALES_UNITS,TOTAL_SALE,AVERAGE_SALES_DAY)
    values (dwa01703613.seq_H_TOTAL_SALES.nextval,vPKDTIME,vSALES_UNITS,vTOTAL_SALE,AVERAGE_SALES_DAY);
    commit;
  END LOOP;
  close H_TOTAL_SALES;

END H_TOTAL_SALES;

-- EXTRACCION DATOS

-- DIMENSION CONTACTOS
begin
	UPDATE_D_CONTACTS;
end;
-- DIMENSION EMPLEADOS
begin
	UPDATE_D_EMPLOYEES;
end;
-- DIMENSION CLIENTES
begin
	UPDATE_D_CUSTOMERS;
end;
-- HECHOS CONTACTOS
declare
	INITIAL_DATE DATE := to_date('01-01-2022','DD-MON-YYYY');
	FINAL_DATE DATE := to_date('01-05-2022','DD-MON-YYYY');
begin
	UPDATE_H_CONTACTS(
		INITIAL_DATE => INITIAL_DATE,
		FINAL_DATE => FINAL_DATE
	);
end;
-- DIMENSION VENTAS EMPLEADOS
declare
	INITIAL_DATE DATE := to_date('01-01-2022','DD-MON-YYYY');
	FINAL_DATE DATE := to_date('01-05-2022','DD-MON-YYYY');
begin
	UPDATE_H_SALES_EMPLOYEES(
		INITIAL_DATE => INITIAL_DATE,
		FINAL_DATE => FINAL_DATE
	);
end;
-- HECHOS CLIENTES
declare
	INITIAL_DATE DATE := to_date('01-01-2022','DD-MON-YYYY');
	FINAL_DATE DATE := to_date('01-05-2022','DD-MON-YYYY');
begin
	UPDATE_H_CUSTOMERS(
		INITIAL_DATE => INITIAL_DATE,
		FINAL_DATE => FINAL_DATE
	);
end;
-- HECHOS TOTALES VENTAS
declare
	INITIAL_DATE DATE := to_date('01-01-2022','DD-MON-YYYY');
	FINAL_DATE DATE := to_date('01-05-2022','DD-MON-YYYY');
begin
	UPDATE_H_TOTAL_SALES(
		INITIAL_DATE => INITIAL_DATE,
		FINAL_DATE => FINAL_DATE
	);
end;
